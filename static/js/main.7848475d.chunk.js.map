{"version":3,"sources":["divs/chart/Chart.module.css","logo.svg","divs/Divs.js","divs/chart/chart.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","chart","slider","__webpack_require__","p","Radium","props","react_default","a","createElement","className","style","@media (min-width: 600px)","width","@media (max-width: 600px)","fontSize","children","number","Map","state","data","len","slidVal1","onSliderChange1","event","sum","parseInt","target","value","_this","setState","_this2","this","fetch","then","res1","json","fat","map","i","count","timeStamp","Date","dateTime","getFullYear","getMonth","getDate","test1","d3","key","d","rollup","v","entries","length","es6","height","margin","classes","slice","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","fill","min","max","onChange","React","Component","jsfiddleUrl","App","feed","rating","reports","downloads","time","showDivs","toggleHandler","doesShow","setInterval","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Promise","all","_ref2","_ref3","slicedToArray","res2","res3","res4","res5","res6","_ref4","_ref5","stop","borderRadius",":hover","backgroundColor","color","names","titles","divs","index","divs_Divs","push","style_root","src","logo","alt","defineProperty","onClick","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7848475d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"Chart_chart__1baBY\",\"slider\":\"Chart_slider__2RgHB\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport Radium, {StyleRoot} from 'radium';\nimport './Divs.css';\n\n\n\nconst divs = (props) => {\n    const style = {\n        '@media (min-width: 600px)':{\n            width: '450px'\n        },\n        '@media (max-width: 600px)':{\n              width: '80%',\n              fontSize: '15px'             \n            }\n          \n    };\n    return (\n    <div className=\"Box1\" style = {style}>\n        <p>{props.children}</p>\n        <p>{props.number}</p>\n    </div>\n    )}\n\nexport default Radium(divs);","import React, { Component } from 'react';\nimport { AreaChart, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Area } from 'recharts';\nimport classes from './Chart.module.css'\nimport * as d3 from 'd3'\n\n\n\nclass Map extends React.Component {\n\n  state = {\n\n    data : [],\n    \n    len : 1,\n    slidVal1: 1\n    }\n\n\n    componentDidMount(){\n      \n  \n        fetch('http://18.191.231.245:4000/stats')\n     \n      .then(res1 => res1.json())\n      .then(res1 => {\n\n\n      var fat = res1.data.map(i => ({count: i.count, timeStamp: new Date(i.dateTime).getFullYear() + \"/\" + (new Date(i.dateTime).getMonth()+1) + \"/\" + new Date(i.dateTime).getDate()}))\n      var expensesByName = d3.nest()\n  .key(function(d) { return d.timeStamp; })\n  .rollup(function(v) { return d3.sum(v, function(d) { return d.count; }); })\n  .entries(fat);\n\n \n  var test1 = expensesByName\n\n  this.setState({data:test1, len : test1.length})\n\n\n    });\n    //i.dateTime.getFullYear() + \"/\" + i.dateTime.getMonth() + \"/\" + i.dateTime.getDate() \n      \n    }\n\n    onSliderChange1 = event => {\n      const sum = parseInt(event.target.value, 10);\n      this.setState({\n     \n        slidVal1: sum\n      });\n  \n    };\n\n\n\n    static jsfiddleUrl = 'https://jsfiddle.net/alidingling/xqjtetw0/';\n\n    render() {\n\n    \n      return (\n        <div>\n<ResponsiveContainer width=\"100%\" height={400} style = {{margin: \"30px auto\"}}>\n        <AreaChart\n        className = {classes.chart}\n        data={this.state.data.slice(0,this.state.slidVal1)}\n        margin={{\n          top: 10, right: 30, left: 0, bottom: 0,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"key\"/>\n        <YAxis />\n        <Tooltip />\n        <Area type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n      </AreaChart>\n      </ResponsiveContainer>\n        <input className={classes.slider} type=\"range\" min=\"1\" max={this.state.len} onChange={this.onSliderChange1}/>\n        </div>\n\n      );\n    }\n  }\nexport default Map","import React, { Component } from 'react';\nimport Radium, {StyleRoot} from 'radium';\nimport logo from './logo.svg';\nimport './App.css';\nimport Divs from './divs/Divs';\n//import Slidera from './divs/slider/slider'\nimport Map from \"./divs/chart/chart\";\n\n\nclass App extends Component {\n  state = {\n    feed:[],\n    count:[],\n    rating:[],\n    reports:[],\n    downloads:[],\n    time:[],\n    //slidVal: 1,\n\n    showDivs: false\n  }\n\n\n\n\n  componentDidMount(){\n    setInterval(async () => {\n    Promise.all([\n      fetch('http://18.191.231.245:4000/feed'),\n      fetch('http://18.191.231.245:4000/count'),\n      fetch('http://18.191.231.245:4000/rating'),\n      fetch('http://18.191.231.245:4000/reports'),\n      fetch('http://18.191.231.245:4000/downloads'),\n      fetch('http://18.191.231.245:4000/tottime')\n    ])\n    .then(([res1, res2,res3,res4, res5,res6]) => Promise.all([res1.json(), res2.json(),res3.json(), res4.json(),res5.json(), res6.json()]))\n    .then(([res1, res2,res3,res4, res5,res6]) => this.setState({\n      feed: res1.data, \n      count: res2.data,\n      rating: res3.data, \n      reports: res4.data,\n      downloads: res5.data, \n      time: res6.data\n    }));\n  },10000);\n}\n\n\n\n  toggleHandler = () => {\n    const doesShow = this.state.showDivs;\n    this.setState({showDivs: !doesShow})\n  }\n\n  // onSliderChange = event => {\n  //   const sum = parseInt(event.target.value, 10);\n  //   this.setState({\n   \n  //     slidVal: sum\n  //   });\n  //   console.log(this.state.slidVal)\n  // };\n\n  \n\n\n  render() {\n\n\n    const style = {width:\"80px\",height:\"80px\", margin: \"16px auto\",borderRadius: '50%',fontSize:'35px',\n      ':hover': {\n        backgroundColor: 'black',\n        color: 'yellow'\n      }  \n    };\n\n    let names = [this.state.count,this.state.feed, \n                this.state.rating, this.state.reports,\n                this.state.downloads, this.state.time];\n    let titles = ['Count of Visits:','Feedback Count:','Current Rating:','Downloaded Reports:','Downloaded Datasets:','Hours On:']\n\n    let divs = null;\n\n    if (this.state.showDivs){\n      divs = (\n        <div>\n\n          {names.map((i,index) => {\n            \n            return <Divs number ={i.map( i => <p>{i.count\n               //* this.state.slidVal\n              }</p>) }>{titles[index]}</Divs>\n            \n          })}\n\n        {/* <Divs number ={names[0].map( i => <p>{i.count}</p>) }>Feedback Count:</Divs>\n\n        <Divs number ={this.state.count.map( i => <p>{i.count}</p>) }>Count of Visits:</Divs>\n\n        <Divs number ={this.state.rating.map( i => <p>{i.count}</p>) }>Current Rating:</Divs>\n\n        <Divs number ={this.state.reports.map( i => <p>{i.count}</p>) }>Downloaded Reports:</Divs>\n\n        <Divs number ={this.state.downloads.map( i => <p>{i.count}</p>) }>Downloaded Datasets:</Divs>\n\n        <Divs number ={this.state.time.map( i => <p>{i.count}</p>) }>Hours On:</Divs> */}\n\n      </div> \n\n      );\n      style.backgroundColor = 'green';\n      style[':hover'] = {\n        backgroundColor: 'black',\n        color: 'yellow'\n      };  \n    }\n\n    const classes = [];\n    if (this.state.showDivs){\n      classes.push('red');\n    };\n    \n\n    return (\n      <StyleRoot>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\" className={classes}>TLC Data Hub Monitor</h1>\n        </header>\n\n \n\n        {/* <Slidera\n        changed = {this.onSliderChange}\n        /> */}\n\n        <Map/>\n        <button \n        style = {style}\n        onClick = {this.toggleHandler}\n        >\n          +\n        </button>\n        {divs}\n\n       \n\n      </div>\n      </StyleRoot>\n    );\n  }\n\n\n\n}\n\n\nexport default Radium(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}